@mixin bp($point) {

  $bp-babybear: "(max-width: 600px)";
  $bp-mamabear: "(max-width: 1200px)";
  $bp-papabear: "(max-width: 1600px)";

  @if $point == papa-bear {
    @media #{$bp-papabear} { @content; }
  }
  @else if $point == mama-bear {
    @media #{$bp-mamabear} { @content; }
  }
  @else if $point == baby-bear {
    @media #{$bp-babybear}  { @content; }
  }

}

@mixin clearfix{
  zoom:1;
      &:before, &:after {
        content:'';
        display:table;
    }
    &:after {
        clear: both;
    }
}




/* experimental block grid code, will not work in IE8  */
[class*="block-grid-"] {
    display: block;
    padding: 0;
    margin: 0 -0.55556rem;
    @include clearfix;
}

[class*="block-grid-"] > li {
    display: block;
    height: auto;
    float: left;
    padding: 0 0.55556rem 1.11111rem;
}

.block-grid-6 > li {
  width: 16.66666%;
}


.small-block-grid-3 > li {
    width: 33.33333%;
    list-style: none;
}

.small-block-grid-3 > li:nth-of-type(1n) {
    clear: none;
}

.small-block-grid-3 > li:nth-of-type(3n+1) {
    clear: both;
}


.block-grid-4  li {
    width: 25%;
    list-style: none;

    @include bp(baby-bear) {
      width:100%;
    }
}

.block-grid-4  li:nth-of-type(1n) {
    clear: none;
}

.block-grid-4  li:nth-of-type(4n+1) {
    clear: both;
}
